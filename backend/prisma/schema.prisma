generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  avatarUrl     String?
  accessToken   String?
  provider      String?   @unique
  providerId    String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  repos         Repo[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Repo {
  id             Int      @id @default(autoincrement())
  provider       String
  providerRepoId String
  name           String
  fullName       String
  url            String
  stars          Int      @default(0)
  defaultBranch  String?
  autoReview     Boolean  @default(false)
  userId         Int?
  createdAt      DateTime @default(now())
  user           User?    @relation(fields: [userId], references: [id])

  @@unique([provider, providerRepoId])
  @@map("repos")
}
